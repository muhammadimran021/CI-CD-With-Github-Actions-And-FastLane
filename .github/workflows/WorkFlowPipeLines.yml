name: Distribute

on: [ push, pull_request ]

jobs:
  job1:
    name: Track Push or Pull
    runs-on: ubuntu-latest

    outputs:
      push: ${{ steps.push.outputs.BRANCH_NAME }}
      pull: ${{ steps.pull.outputs.BRANCH_NAME }}

    steps:
      - uses: actions/checkout@v2

      - name: Get Branch Name
        if: github.event_name == 'push'
        shell: bash
        env:
          BRANCH_NAME: ${{ github.ref_name }}
        id: push
        run: echo "the branch name is ${BRANCH_NAME}"

      - name: Get Branch Name if Pull Request
        if: github.event_name == 'pull_request'
        env:
          BRANCH_NAME: ${{ github.head_ref }}
        id: pull
        run: echo "the branch name is ${BRANCH_NAME}"


  job2:
    name: Run Build Process According To Branch
    needs: job1
    runs-on: ubuntu-latest


    if: "contains(github.event.head_commit.message, '[create apk for firebase]')"
    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-ruby@v1
        with:
          ruby-version: '2.6'

      - name: Cache Ruby - Bundler
        uses: actions/cache@v2
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-gems-

      - name: Cache Gradle
        uses: actions/cache@v1
        with:
          path: ~/.gradle/caches/
          key: cache-clean-gradle-${{ matrix.os }}-${{ matrix.jdk }}

      - name: Cache Gradle Wrapper
        uses: actions/cache@v1
        with:
          path: ~/.gradle/wrapper/
          key: cache-clean-wrapper-${{ matrix.os }}-${{ matrix.jdk }}

      - name: Grant Permission to Execute
        run: chmod +x gradlew

      #       - name: Add firebase Plugin
      #         run: fastlane add_plugin firebase_app_distribution

      #       - name: Add firebase Plugin
      #         run: fastlane add_plugin load_json

      - name: Install bundle
        run: |
          bundle config path vendor/bundle
          bundle install --jobs 4 --retry 3

      - name: Branch Name
        shell: bash
        env:
          BRANCH_NAME1: ${{needs.job1.env.BRANCH_NAME}}
        run: echo "the branch name is ${{needs.job1.env.BRANCH_NAME}}"


      - name: Distribute app with ðŸ”¥ App Distribution ðŸš€
        if: ${{needs.job1.outputs.push  == 'master-release'}}
        run: bundle exec fastlane release

      - name: Create Debug apk file
        if: ${{needs.job1.outputs.push  == 'master'}}
        run: bundle exec fastlane staging








































#name: My Practice CICD
#
#on:
#  push:
#    branches: [ "master" ]
#
#
#jobs:
#  my-job:
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v2
#
#      - name: Cache Gradle Wrapper
#        uses: actions/cache@v1
#        with:
#          path: ~/.gradle/wrapper/
#          key: cache-clean-wrapper-${{ matrix.os }}-${{ matrix.jdk }}
#
#      - name: Grant Permission to Execute
#        run: chmod +x gradlew
#
#      - name: bundle install
#        run: |
#          bundle config path vendor/bundle
#          bundle install --jobs 4 --retry 3
#      - name: Create Firebase Service Credentials file
#        run: |
#          echo "$FIREBASE_CREDENTIALS" > firebase_credentials.json.b64
#          base64 -d -i firebase_credentials.json.b64 > firebase_credentials.json
#        env:
#          FIREBASE_CREDENTIALS: ${{ secrets.FIREBASE_CREDENTIALS }}
#
#      - name: Distribute app with ðŸ”¥ App Distribution ðŸš€
#        run: bundle exec fastlane distribution
#        env:
#          FIREBASE_APP_ID: ${{ secrets.FIREBASE_APP_ID }}
#
#
